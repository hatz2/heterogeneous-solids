const int perm[] = int[](
    151, 160, 137,  91,  90,  15, 131,  13, 201,  95,  96,  53, 194, 233,   7,
    225, 140,  36, 103,  30,  69, 142,   8,  99,  37, 240,  21,  10,  23, 190,
    6, 148, 247, 120, 234,  75,   0,  26, 197,  62,  94, 252, 219, 203, 117,
    35,  11,  32,  57, 177,  33,  88, 237, 149,  56,  87, 174,  20, 125, 136,
    171, 168,  68, 175,  74, 165,  71, 134, 139,  48,  27, 166,  77, 146, 158,
    231,  83, 111, 229, 122,  60, 211, 133, 230, 220, 105,  92,  41,  55,  46,
    245,  40, 244, 102, 143,  54,  65,  25,  63, 161,   1, 216,  80,  73, 209,
    76, 132, 187, 208,  89,  18, 169, 200, 196, 135, 130, 116, 188, 159,  86,
    164, 100, 109, 198, 173, 186,   3,  64,  52, 217, 226, 250, 124, 123,   5,
    202,  38, 147, 118, 126, 255,  82,  85, 212, 207, 206,  59, 227,  47,  16,
    58,  17, 182, 189,  28,  42, 223, 183, 170, 213, 119, 248, 152,   2,  44,
    154, 163,  70, 221, 153, 101, 155, 167,  43, 172,   9, 129,  22,  39, 253,
    19,  98, 108, 110,  79, 113, 224, 232, 178, 185, 112, 104, 218, 246,  97,
    228, 251,  34, 242, 193, 238, 210, 144,  12, 191, 179, 162, 241,  81,  51,
    145, 235, 249,  14, 239, 107,  49, 192, 214,  31, 181, 199, 106, 157, 184,
    84, 204, 176, 115, 121,  50,  45, 127,   4, 150, 254, 138, 236, 205,  93,
    222, 114,  67,  29,  24,  72, 243, 141, 128, 195,  78,  66, 215,  61, 156,
    180, 151, 160, 137,  91,  90,  15, 131,  13, 201,  95,  96,  53, 194, 233,
    7, 225, 140,  36, 103,  30,  69, 142,   8,  99,  37, 240,  21,  10,  23,
    190,   6, 148, 247, 120, 234,  75,   0,  26, 197,  62,  94, 252, 219, 203,
    117,  35,  11,  32,  57, 177,  33,  88, 237, 149,  56,  87, 174,  20, 125,
    136, 171, 168,  68, 175,  74, 165,  71, 134, 139,  48,  27, 166,  77, 146,
    158, 231,  83, 111, 229, 122,  60, 211, 133, 230, 220, 105,  92,  41,  55,
    46, 245,  40, 244, 102, 143,  54,  65,  25,  63, 161,   1, 216,  80,  73,
    209,  76, 132, 187, 208,  89,  18, 169, 200, 196, 135, 130, 116, 188, 159,
    86, 164, 100, 109, 198, 173, 186,   3,  64,  52, 217, 226, 250, 124, 123,
    5, 202,  38, 147, 118, 126, 255,  82,  85, 212, 207, 206,  59, 227,  47,
    16,  58,  17, 182, 189,  28,  42, 223, 183, 170, 213, 119, 248, 152,   2,
    44, 154, 163,  70, 221, 153, 101, 155, 167,  43, 172,   9, 129,  22,  39,
    253,  19,  98, 108, 110,  79, 113, 224, 232, 178, 185, 112, 104, 218, 246,
    97, 228, 251,  34, 242, 193, 238, 210, 144,  12, 191, 179, 162, 241,  81,
    51, 145, 235, 249,  14, 239, 107,  49, 192, 214,  31, 181, 199, 106, 157,
    184,  84, 204, 176, 115, 121,  50,  45, 127,   4, 150, 254, 138, 236, 205,
    93, 222, 114,  67,  29,  24,  72, 243, 141, 128, 195,  78,  66, 215,  61,
    156, 180
);

const float hist[] = float[](
    0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
    0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
    0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
    0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
    0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
    0.000000, 0.000000, 0.000000, 0.000000, 0.000001, 0.000001, 0.000001,
    0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000002,
    0.000002, 0.000002, 0.000002, 0.000002, 0.000002, 0.000002, 0.000003,
    0.000003, 0.000003, 0.000003, 0.000003, 0.000003, 0.000003, 0.000004,
    0.000004, 0.000004, 0.000004, 0.000004, 0.000004, 0.000005, 0.000005,
    0.000005, 0.000005, 0.000006, 0.000006, 0.000006, 0.000006, 0.000007,
    0.000007, 0.000008, 0.000008, 0.000010, 0.000011, 0.000012, 0.000014,
    0.000016, 0.000017, 0.000019, 0.000021, 0.000024, 0.000026, 0.000028,
    0.000030, 0.000033, 0.000036, 0.000038, 0.000041, 0.000044, 0.000047,
    0.000050, 0.000053, 0.000056, 0.000059, 0.000062, 0.000065, 0.000069,
    0.000072, 0.000076, 0.000080, 0.000084, 0.000088, 0.000092, 0.000096,
    0.000100, 0.000105, 0.000110, 0.000115, 0.000120, 0.000125, 0.000131,
    0.000137, 0.000144, 0.000151, 0.000159, 0.000167, 0.000176, 0.000185,
    0.000194, 0.000204, 0.000214, 0.000225, 0.000236, 0.000248, 0.000260,
    0.000273, 0.000286, 0.000299, 0.000314, 0.000329, 0.000345, 0.000360,
    0.000377, 0.000394, 0.000412, 0.000429, 0.000449, 0.000468, 0.000489,
    0.000510, 0.000532, 0.000555, 0.000579, 0.000604, 0.000631, 0.000659,
    0.000687, 0.000716, 0.000746, 0.000778, 0.000811, 0.000846, 0.000882,
    0.000919, 0.000958, 0.000998, 0.001039, 0.001081, 0.001126, 0.001172,
    0.001218, 0.001267, 0.001315, 0.001368, 0.001422, 0.001479, 0.001539,
    0.001601, 0.001667, 0.001736, 0.001808, 0.001882, 0.001960, 0.002041,
    0.002126, 0.002214, 0.002303, 0.002399, 0.002496, 0.002597, 0.002703,
    0.002812, 0.002925, 0.003043, 0.003165, 0.003292, 0.003422, 0.003558,
    0.003699, 0.003844, 0.003995, 0.004149, 0.004308, 0.004473, 0.004642,
    0.004817, 0.004996, 0.005182, 0.005372, 0.005566, 0.005768, 0.005977,
    0.006192, 0.006413, 0.006639, 0.006873, 0.007111, 0.007358, 0.007610,
    0.007871, 0.008137, 0.008409, 0.008690, 0.008977, 0.009269, 0.009571,
    0.009880, 0.010195, 0.010517, 0.010843, 0.011180, 0.011523, 0.011872,
    0.012230, 0.012594, 0.012965, 0.013346, 0.013729, 0.014121, 0.014519,
    0.014923, 0.015341, 0.015763, 0.016197, 0.016634, 0.017082, 0.017541,
    0.018005, 0.018480, 0.018962, 0.019449, 0.019948, 0.020455, 0.020971,
    0.021499, 0.022038, 0.022587, 0.023144, 0.023713, 0.024290, 0.024883,
    0.025489, 0.026112, 0.026753, 0.027411, 0.028093, 0.028801, 0.029550,
    0.030335, 0.031113, 0.031896, 0.032686, 0.033482, 0.034278, 0.035082,
    0.035893, 0.036712, 0.037538, 0.038372, 0.039208, 0.040057, 0.040914,
    0.041780, 0.042652, 0.043531, 0.044418, 0.045309, 0.046213, 0.047120,
    0.048042, 0.048975, 0.049912, 0.050855, 0.051809, 0.052772, 0.053744,
    0.054726, 0.055719, 0.056722, 0.057730, 0.058751, 0.059778, 0.060817,
    0.061868, 0.062936, 0.064012, 0.065098, 0.066194, 0.067299, 0.068420,
    0.069544, 0.070680, 0.071831, 0.072990, 0.074160, 0.075342, 0.076532,
    0.077740, 0.078959, 0.080193, 0.081427, 0.082676, 0.083938, 0.085214,
    0.086501, 0.087795, 0.089100, 0.090426, 0.091755, 0.093104, 0.094459,
    0.095839, 0.097229, 0.098632, 0.100045, 0.101474, 0.102924, 0.104390,
    0.105873, 0.107370, 0.108884, 0.110413, 0.111959, 0.113525, 0.115107,
    0.116709, 0.118331, 0.119963, 0.121614, 0.123290, 0.124984, 0.126692,
    0.128416, 0.130165, 0.131923, 0.133707, 0.135501, 0.137312, 0.139142,
    0.140988, 0.142851, 0.144728, 0.146624, 0.148528, 0.150440, 0.152373,
    0.154314, 0.156272, 0.158234, 0.160215, 0.162203, 0.164197, 0.166213,
    0.168237, 0.170277, 0.172325, 0.174389, 0.176463, 0.178558, 0.180656,
    0.182769, 0.184888, 0.187025, 0.189163, 0.191316, 0.193487, 0.195660,
    0.197842, 0.200033, 0.202234, 0.204441, 0.206657, 0.208886, 0.211123,
    0.213372, 0.215623, 0.217876, 0.220141, 0.222417, 0.224703, 0.226998,
    0.229304, 0.231605, 0.233922, 0.236250, 0.238588, 0.240932, 0.243274,
    0.245624, 0.247991, 0.250358, 0.252734, 0.255118, 0.257518, 0.259908,
    0.262305, 0.264717, 0.267135, 0.269555, 0.271979, 0.274415, 0.276857,
    0.279312, 0.281770, 0.284249, 0.286725, 0.289204, 0.291692, 0.294199,
    0.296702, 0.299218, 0.301729, 0.304248, 0.306783, 0.309327, 0.311878,
    0.314427, 0.316979, 0.319551, 0.322121, 0.324701, 0.327295, 0.329892,
    0.332506, 0.335120, 0.337738, 0.340358, 0.342995, 0.345634, 0.348277,
    0.350916, 0.353572, 0.356236, 0.358908, 0.361583, 0.364260, 0.366947,
    0.369633, 0.372339, 0.375054, 0.377771, 0.380501, 0.383236, 0.385977,
    0.388727, 0.391494, 0.394259, 0.397028, 0.399808, 0.402592, 0.405390,
    0.408198, 0.411012, 0.413828, 0.416645, 0.419481, 0.422330, 0.425195,
    0.428066, 0.430933, 0.433829, 0.436722, 0.439633, 0.442556, 0.445469,
    0.448382, 0.451316, 0.454249, 0.457200, 0.460161, 0.463131, 0.466124,
    0.469103, 0.472083, 0.475082, 0.478091, 0.481115, 0.484136, 0.487174,
    0.490234, 0.493297, 0.496393, 0.499494, 0.502565, 0.505603, 0.508639,
    0.511670, 0.514696, 0.517721, 0.520727, 0.523729, 0.526724, 0.529722,
    0.532704, 0.535679, 0.538640, 0.541606, 0.544561, 0.547525, 0.550477,
    0.553427, 0.556363, 0.559296, 0.562214, 0.565121, 0.568016, 0.570909,
    0.573790, 0.576662, 0.579537, 0.582403, 0.585244, 0.588085, 0.590917,
    0.593747, 0.596566, 0.599383, 0.602187, 0.604996, 0.607794, 0.610592,
    0.613382, 0.616165, 0.618938, 0.621696, 0.624461, 0.627208, 0.629951,
    0.632691, 0.635423, 0.638140, 0.640852, 0.643570, 0.646283, 0.648990,
    0.651682, 0.654378, 0.657070, 0.659757, 0.662443, 0.665117, 0.667780,
    0.670438, 0.673083, 0.675726, 0.678360, 0.680993, 0.683621, 0.686242,
    0.688851, 0.691462, 0.694056, 0.696659, 0.699256, 0.701834, 0.704414,
    0.706992, 0.709564, 0.712124, 0.714673, 0.717217, 0.719757, 0.722280,
    0.724805, 0.727317, 0.729830, 0.732333, 0.734833, 0.737324, 0.739809,
    0.742287, 0.744766, 0.747232, 0.749693, 0.752149, 0.754596, 0.757031,
    0.759464, 0.761887, 0.764301, 0.766701, 0.769098, 0.771491, 0.773873,
    0.776247, 0.778618, 0.780975, 0.783333, 0.785677, 0.788011, 0.790332,
    0.792653, 0.794966, 0.797274, 0.799563, 0.801850, 0.804127, 0.806400,
    0.808659, 0.810910, 0.813152, 0.815379, 0.817595, 0.819804, 0.821999,
    0.824181, 0.826349, 0.828498, 0.830637, 0.832767, 0.834882, 0.836991,
    0.839086, 0.841168, 0.843242, 0.845295, 0.847341, 0.849378, 0.851392,
    0.853393, 0.855383, 0.857355, 0.859322, 0.861262, 0.863184, 0.865096,
    0.866980, 0.868844, 0.870698, 0.872529, 0.874342, 0.876137, 0.877913,
    0.879664, 0.881391, 0.883106, 0.884792, 0.886468, 0.888122, 0.889750,
    0.891367, 0.892960, 0.894532, 0.896084, 0.897611, 0.899125, 0.900623,
    0.902101, 0.903558, 0.904999, 0.906429, 0.907837, 0.909229, 0.910601,
    0.911960, 0.913313, 0.914647, 0.915968, 0.917276, 0.918576, 0.919858,
    0.921133, 0.922391, 0.923637, 0.924871, 0.926100, 0.927308, 0.928509,
    0.929693, 0.930867, 0.932030, 0.933188, 0.934330, 0.935454, 0.936570,
    0.937673, 0.938770, 0.939851, 0.940923, 0.941980, 0.943028, 0.944060,
    0.945086, 0.946098, 0.947101, 0.948098, 0.949085, 0.950059, 0.951021,
    0.951979, 0.952923, 0.953861, 0.954792, 0.955710, 0.956617, 0.957518,
    0.958413, 0.959300, 0.960175, 0.961045, 0.961913, 0.962768, 0.963616,
    0.964452, 0.965279, 0.966100, 0.966912, 0.967720, 0.968519, 0.969314,
    0.970107, 0.970892, 0.971670, 0.972442, 0.973218, 0.973996, 0.974732,
    0.975418, 0.976074, 0.976703, 0.977310, 0.977897, 0.978465, 0.979019,
    0.979558, 0.980085, 0.980599, 0.981101, 0.981595, 0.982082, 0.982555,
    0.983018, 0.983472, 0.983918, 0.984356, 0.984783, 0.985202, 0.985612,
    0.986012, 0.986404, 0.986787, 0.987164, 0.987535, 0.987897, 0.988251,
    0.988597, 0.988937, 0.989268, 0.989594, 0.989914, 0.990225, 0.990527,
    0.990825, 0.991119, 0.991404, 0.991683, 0.991955, 0.992220, 0.992478,
    0.992729, 0.992975, 0.993216, 0.993448, 0.993676, 0.993899, 0.994114,
    0.994321, 0.994521, 0.994718, 0.994908, 0.995091, 0.995269, 0.995444,
    0.995612, 0.995776, 0.995936, 0.996090, 0.996241, 0.996386, 0.996526,
    0.996662, 0.996793, 0.996920, 0.997043, 0.997163, 0.997276, 0.997388,
    0.997494, 0.997597, 0.997697, 0.997792, 0.997884, 0.997969, 0.998053,
    0.998133, 0.998211, 0.998286, 0.998358, 0.998427, 0.998493, 0.998557,
    0.998618, 0.998678, 0.998733, 0.998787, 0.998839, 0.998890, 0.998936,
    0.998982, 0.999025, 0.999067, 0.999106, 0.999144, 0.999182, 0.999218,
    0.999252, 0.999285, 0.999317, 0.999348, 0.999377, 0.999406, 0.999433,
    0.999461, 0.999487, 0.999512, 0.999536, 0.999559, 0.999582, 0.999602,
    0.999622, 0.999641, 0.999659, 0.999677, 0.999693, 0.999709, 0.999724,
    0.999738, 0.999752, 0.999765, 0.999777, 0.999788, 0.999800, 0.999810,
    0.999820, 0.999830, 0.999840, 0.999849, 0.999858, 0.999866, 0.999874,
    0.999882, 0.999889, 0.999897, 0.999903, 0.999909, 0.999915, 0.999920,
    0.999925, 0.999930, 0.999934, 0.999938, 0.999942, 0.999946, 0.999949,
    0.999952, 0.999954, 0.999957, 0.999959, 0.999961, 0.999963, 0.999965,
    0.999967, 0.999969, 0.999970, 0.999972, 0.999973, 0.999974, 0.999976,
    0.999977, 0.999978, 0.999979, 0.999981, 0.999982, 0.999983, 0.999984,
    0.999985, 0.999987, 0.999987, 0.999988, 0.999990, 0.999990, 0.999991,
    0.999992, 0.999993, 0.999994, 0.999994, 0.999995, 0.999996, 0.999997,
    0.999997, 0.999997, 0.999998, 0.999998, 0.999999, 0.999999, 0.999999,
    0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999,
    0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999,
    0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999,
    0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999,
    0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999,
    0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999,
    0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999,
    0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999,
    0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999,
    0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999,
    0.999999, 0.999999, 0.999999, 0.999999, 0.999999, 0.999999
);

float fade(float t) {
    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
}

int fastFloor(float x) {
    int cond = int(x > 0);
    return cond*int(x) + (1-cond)*int(x-1);
}

float lerp(float t, float a, float b) {
    return (a + (t * (b - a)));
}

float grad(int hash, float x, float y, float z) {
    int h = hash & 15;

    float u = float(int(h < 8)) * x + float(int(h >= 8)) + y;

    float cond = float(int(h == 12 || h == 14));
    float v = float(int(h < 4)) * y + (float(int(h >= 4))) * (cond*x + cond*z);

    float a = u + float(int((h & 1) != 0)) * 2 * -u;
    float b = v + float(int((h & 2) != 0)) * 2 * -v;

    return a + b;
}

subroutine float PerlinFunction(vec3 texCoord3D, ivec3 period);
subroutine uniform PerlinFunction perlinNoise;

subroutine(PerlinFunction)
float pNoise(vec3 texCoord3D, ivec3 period) {
    float x = texCoord3D.x * period.x; float y = texCoord3D.y * period.y; float z = texCoord3D.z * period.z;

    int ix0, iy0, ix1, iy1, iz0, iz1;
    float fx0, fy0, fz0, fx1, fy1, fz1;
    float s, t, r;
    float nxy0, nxy1, nx0, nx1, n0, n1;

    ix0 = fastFloor(x); iy0 = fastFloor(y); iz0 = fastFloor(z); // Integer part of x, y, z
    fx0 = x - ix0; fy0 = y - iy0; fz0 = z - iz0;                      // Fractional part of x, y, z
    fx1 = fx0 - 1.0; fy1 = fy0 - 1.0; fz1 = fz0 - 1.0;
    ix1 = ((ix0 + 1) % period.x) & 0xff;   // Wrap to 0..px-1 and wrap to 0..255
    iy1 = ((iy0 + 1) % period.y) & 0xff;   // Wrap to 0..py-1 and wrap to 0..255
    iz1 = ((iz0 + 1) % period.z) & 0xff;   // Wrap to 0..pz-1 and wrap to 0..255
    ix0 = (ix0 % period.x) & 0xff; iy0 = (iy0 % period.y) & 0xff; iz0 = (iz0 % period.z) & 0xff;

    r = fade(fz0); t = fade(fy0); s = fade(fx0);

    nxy0 = grad(perm[ix0 + perm[iy0 + perm[iz0]]], fx0, fy0, fz0);
    nxy1 = grad(perm[ix0 + perm[iy0 + perm[iz1]]], fx0, fy0, fz1);
    nx0 = lerp(r, nxy0, nxy1);

    nxy0 = grad(perm[ix0 + perm[iy1 + perm[iz0]]], fx0, fy1, fz0);
    nxy1 = grad(perm[ix0 + perm[iy1 + perm[iz1]]], fx0, fy1, fz1);
    nx1 = lerp(r, nxy0, nxy1);

    n0 = lerp(t, nx0, nx1);

    nxy0 = grad(perm[ix1 + perm[iy0 + perm[iz0]]], fx1, fy0, fz0);
    nxy1 = grad(perm[ix1 + perm[iy0 + perm[iz1]]], fx1, fy0, fz1);
    nx0 = lerp(r, nxy0, nxy1);

    nxy0 = grad(perm[ix1 + perm[iy1 + perm[iz0]]], fx1, fy1, fz0);
    nxy1 = grad(perm[ix1 + perm[iy1 + perm[iz1]]], fx1, fy1, fz1);
    nx1 = lerp(r, nxy0, nxy1);

    n1 = lerp(t, nx0, nx1);

    return (0.936 * (lerp(s, n0, n1)));
}

subroutine(PerlinFunction)
float correctedPNoise(vec3 texCoord3D, ivec3 period) {
    float value = (pNoise(texCoord3D, period) + 1.0) * 0.5;
    int idx = int(value*1001.0);
    return hist[idx];
}